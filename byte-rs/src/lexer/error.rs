use crate::{core::error::*, has_traits};

/// Errors generated by the lexer.
#[derive(Clone, Debug, PartialEq)]
pub enum LexerError {
	InvalidSymbol,
	InvalidDedentInRegion,
	InvalidDedentIndent,
}

has_traits!(LexerError);

impl IsError for LexerError {
	fn output(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
		match self {
			LexerError::InvalidSymbol => write!(f, "invalid symbol"),
			LexerError::InvalidDedentInRegion => {
				write!(f, "indentation level is less than the enclosing expression")
			}
			LexerError::InvalidDedentIndent => {
				write!(
					f,
					"cannot dedent and indent in a single line, return to previous level first"
				)
			}
		}
	}
}
